#!/usr/bin/env bash

SCREENSHOTS_DIR=~/Pictures/Screenshots

commands=(
	full_to_file
	area_to_file
	full_to_clipboard
	area_to_clipboard
)

function full_to_file { (
	ensure_screenshots_directory
	file_path="${SCREENSHOTS_DIR}/full-$(date +"%Y-%m-%d_%H-%M-%S").png"
	maim "${file_path}"
	notify-send "Screenshot saved to ${file_path}"
); }

function area_to_file { (
	ensure_screenshots_directory
	file_path="${SCREENSHOTS_DIR}/area-$(date +"%Y-%m-%d_%H-%M-%S").png"
	maim --select "${file_path}"
	notify-send "Screenshot saved to ${file_path}"
); }

function full_to_clipboard { (
	maim | xclip -selection clipboard -t image/png
	notify-send "Screenshot saved to clipboard"
); }

function area_to_clipboard { (
	maim --select | xclip -selection clipboard -t image/png
	notify-send "Screenshot saved to clipboard"
); }

function ensure_screenshots_directory {
	mkdir -p "${SCREENSHOTS_DIR}"
}

function help {
	printf "%s\n" "Available commands:"
	printf " %s\n" "${commands[@]}" help
}

function run-command {
	command="$1"
	for c in "${commands[@]}"; do
		if [ "$c" = "$command" ]; then
			("$command" "${@:2}")
			return
		fi
	done
	printf "%s\n" "Command '${command}' does not exist."
}

set -euo pipefail
cd "$(dirname "${BASH_SOURCE[0]}")"
[ -z "${1:-""}" ] || [ "${1:-""}" = "help" ] && help && exit 0
run-command "${1}" "${@:2}"
